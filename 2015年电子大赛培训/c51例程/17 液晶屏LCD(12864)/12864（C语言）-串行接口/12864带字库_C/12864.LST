C51 COMPILER V9.01   12864                                                                 08/05/2014 11:13:18 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE 12864
OBJECT MODULE PLACED IN 12864.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE 12864.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*******************************************************************************
   2          *  描述:                                                                       *
   3          *      12864标准字库液晶演示 数据p0,控制p2                                     *
   4          ********************************************************************************/
   5          #include <reg51.h>
   6          #include <intrins.h>
   7          #define uchar unsigned char
   8          #define uint  unsigned int
   9          /************* 12864LCD引脚定义 *************/
  10          sbit LCD_CS  =  P2^6;      //寄存器选择输入 
  11          sbit LCD_STD  =  P2^5;      //液晶读/写控制
  12          sbit LCD_SCLK  =  P2^7;      //液晶使能控制
  13          sbit LCD_PSB =  P3^2;      //串/并方式控制
  14          //sbit LCD_RST =  P3^7;      //液晶复位端口
  15          
  16          
  17          #define delayNOP(); {_nop_();_nop_();_nop_();_nop_();};
  18          /*********************************************************/
  19          uchar code  DIS1[] = {"    普中科技    "};
  20          uchar code  DIS2[] = {"进入单片机世界  "};
  21          uchar code  DIS3[] = {"www.prechin.com "};
  22          uchar code  DIS4[] = {"TEL:755-29325187"};
  23          /*********************************************************/
  24          
  25          /******************************************************************************/
  26          uchar code Photo2[] ={
  27          /*--  调入了一幅图像：C:\Users\Administrator\Desktop\资料\自动化.bmp  --*/
  28          /*--  宽度x高度=128x64  --*/
  29          0x01,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,
  30          0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE0,
  31          0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF0,
  32          0x3F,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFC,
  33          0x7F,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0xFE,
  34          0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xFF,
  35          0xFC,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7F,
  36          0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,
  37          0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,
  38          0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,
  39          0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
  40          0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
  41          0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
  42          0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
  43          0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
  44          0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
  45          0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
  46          0xE0,0x00,0x00,0x00,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
  47          0xE0,0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0x01,0x80,0x00,0x10,0x38,0x00,0x00,0x07,
  48          0xE0,0x00,0x00,0x00,0xE0,0x00,0x00,0x00,0x03,0x80,0x00,0x3C,0x30,0x00,0x00,0x07,
  49          0xE0,0x00,0x00,0x01,0xC0,0x00,0x00,0x00,0x03,0x00,0x00,0x70,0x30,0x00,0x00,0x07,
  50          0xE0,0x00,0x00,0x01,0x80,0x00,0x03,0xFF,0x03,0x00,0x00,0x60,0x70,0x00,0x00,0x07,
  51          0xE0,0x00,0x00,0xFF,0xFF,0xF0,0x07,0xFF,0x07,0x00,0x00,0xE0,0x60,0x60,0x00,0x07,
  52          0xE0,0x00,0x00,0xFF,0xFF,0xF0,0x00,0x00,0x06,0x00,0x01,0xC0,0x60,0xF0,0x00,0x07,
  53          0xE0,0x00,0x00,0xC0,0x00,0x60,0x00,0x00,0xFF,0xF8,0x03,0x80,0xE1,0xE0,0x00,0x07,
  54          0xE0,0x00,0x01,0xC0,0x00,0x60,0x00,0x01,0xFF,0xF8,0x07,0x80,0xC3,0x80,0x00,0x07,
  55          0xE0,0x00,0x01,0x80,0x00,0xE0,0x00,0x00,0x0C,0x30,0x0F,0x80,0xC7,0x00,0x00,0x07,
C51 COMPILER V9.01   12864                                                                 08/05/2014 11:13:18 PAGE 2   

  56          0xE0,0x00,0x01,0x80,0x00,0xC0,0x3F,0xFE,0x0C,0x30,0x1F,0x01,0xDE,0x00,0x00,0x07,
  57          0xE0,0x00,0x03,0xFF,0xFF,0xC0,0x3F,0xFE,0x18,0x70,0x3F,0x01,0xF8,0x00,0x00,0x07,
  58          0xE0,0x00,0x03,0x00,0x01,0xC0,0x03,0x80,0x18,0x60,0xF7,0x01,0xF0,0x00,0x00,0x07,
  59          0xE0,0x00,0x03,0x00,0x01,0x80,0x03,0x00,0x38,0x60,0x66,0x03,0xC0,0x00,0x00,0x07,
  60          0xE0,0x00,0x07,0x00,0x01,0x80,0x06,0x00,0x30,0xE0,0x06,0x07,0x80,0x00,0x00,0x07,
  61          0xE0,0x00,0x06,0x00,0x03,0x80,0x0E,0x20,0x70,0xC0,0x0E,0x1F,0x00,0x00,0x00,0x07,
  62          0xE0,0x00,0x07,0xFF,0xFF,0x00,0x1C,0x70,0x61,0xC0,0x0C,0x7F,0x00,0x00,0x00,0x07,
  63          0xE0,0x00,0x0F,0xFF,0xFF,0x00,0x18,0x70,0xE1,0x80,0x0D,0xF6,0x00,0x00,0x00,0x07,
  64          0xE0,0x00,0x0C,0x00,0x07,0x00,0x30,0x70,0xC1,0x80,0x1D,0xC6,0x00,0x00,0x00,0x07,
  65          0xE0,0x00,0x0C,0x00,0x06,0x00,0x60,0xF1,0x83,0x80,0x19,0x0E,0x00,0x00,0x00,0x07,
  66          0xE0,0x00,0x1C,0x00,0x06,0x01,0xFF,0xF3,0x83,0x00,0x18,0x0C,0x00,0x00,0x00,0x07,
  67          0xE0,0x00,0x18,0x00,0x0E,0x01,0xFE,0x3F,0x03,0x00,0x38,0x0C,0x07,0x00,0x00,0x07,
  68          0xE0,0x00,0x1F,0xFF,0xFC,0x01,0x80,0x2E,0x06,0x00,0x30,0x1C,0x07,0x00,0x00,0x07,
  69          0xE0,0x00,0x3F,0xFF,0xFC,0x00,0x00,0x1C,0x0E,0x00,0x30,0x1C,0x0E,0x00,0x00,0x07,
  70          0xE0,0x00,0x30,0x00,0x1C,0x00,0x00,0x38,0xFC,0x00,0x70,0x1F,0xFC,0x00,0x00,0x07,
  71          0xE0,0x00,0x70,0x00,0x18,0x00,0x00,0xF0,0x78,0x00,0x60,0x1F,0xF8,0x00,0x00,0x07,
  72          0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
  73          0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
  74          0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
  75          0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
  76          0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
  77          0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
  78          0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
  79          0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
  80          0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
  81          0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
  82          0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
  83          0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,
  84          0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,
  85          0xFC,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3F,
  86          0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,
  87          0xFF,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xFE,
  88          0x7F,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0xFC,
  89          0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF8,
  90          0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE0,
  91          0x03,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xC0,
  92          0x00,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0x00
  93          
  94          };
  95          /*******************************************************************/
  96          /*                                                                 */
  97          /*  延时函数                                                       */
  98          /*                                                                 */
  99          /*******************************************************************/
 100          void delay(int ms)
 101          {
 102   1          while(ms--)
 103   1              {
 104   2            uchar i;
 105   2                for(i=0;i<150;i++)  
 106   2                 {
 107   3                  _nop_();                       
 108   3                      _nop_();
 109   3                      _nop_();
 110   3                      _nop_();
 111   3                 }
 112   2              }
 113   1      }       
 114          /*******************************************************************/
 115          /*                                                                 */
 116          /*  延时函数                                                       */
 117          /*                                                                 */
C51 COMPILER V9.01   12864                                                                 08/05/2014 11:13:18 PAGE 3   

 118          /*******************************************************************/
 119          void delay1(int ms)
 120          {
 121   1          while(ms--)
 122   1              {
 123   2            uchar y;
 124   2                for(y=0;y<100;y++) ; 
 125   2              }
 126   1      }                       
 127          
 128          void send(unsigned char dat)
 129          {
 130   1              unsigned char i;
 131   1              unsigned long x;
 132   1              for(i=0;i<8;i++)
 133   1              {
 134   2                      if(     (dat & 0x80)!=0)
 135   2                      {
 136   3                              LCD_STD=1;
 137   3                      }
 138   2                      else
 139   2                      {
 140   3                              LCD_STD=0;
 141   3                      }
 142   2                      LCD_SCLK=1;
 143   2                      x++;
 144   2                      LCD_SCLK=0;
 145   2              x++;
 146   2                      dat=dat<<1;
 147   2              }
 148   1      }
 149          
 150          
 151          
 152          /*******************************************************************/
 153          /*                                                                 */
 154          /*写指令数据到LCD                                                  */
 155          /*RS=L，RW=L，E=高脉冲，D0-D7=指令码。                             */
 156          /*                                                                 */
 157          /*******************************************************************/
 158          void lcd_wcmd(uchar cmd)
 159          {                          
 160   1          unsigned char byte1=0xf8,byte2,byte3;
 161   1          byte2=cmd & 0xf0;
 162   1              byte3=cmd<<4;
 163   1          LCD_CS=1;
 164   1              send(byte1);
 165   1              send(byte2);
 166   1              send(byte3);
 167   1          LCD_CS=0;
 168   1              delay(5);
 169   1      }
 170          /*******************************************************************/
 171          /*                                                                 */
 172          /*写显示数据到LCD                                                  */
 173          /*RS=H，RW=L，E=高脉冲，D0-D7=数据。                               */
 174          /*                                                                 */
 175          /*******************************************************************/
 176          void lcd_wdat(uchar dat)
 177          {                          
 178   1          unsigned char byte1=0xfa,byte2,byte3;
 179   1          byte2=dat & 0xf0;
C51 COMPILER V9.01   12864                                                                 08/05/2014 11:13:18 PAGE 4   

 180   1              byte3=dat<<4;
 181   1          LCD_CS=1;
 182   1              send(byte1);
 183   1              send(byte2);
 184   1              send(byte3);
 185   1          LCD_CS=0;
 186   1              delay(5);
 187   1      }
 188          /*******************************************************************/
 189          /*                                                                 */
 190          /*  LCD初始化设定                                                  */
 191          /*                                                                 */
 192          /*******************************************************************/
 193          void lcd_init()
 194          { 
 195   1          LCD_PSB = 0;         //串口方式
 196   1          
 197   1      //      LCD_RST = 0;             //液晶复位
 198   1      //    delay(3);                   
 199   1      //   LCD_RST = 1;      
 200   1      //    delay(3);
 201   1          
 202   1          lcd_wcmd(0x34);      //扩充指令操作
 203   1          delay(5);
 204   1          lcd_wcmd(0x30);      //基本指令操作
 205   1          delay(5);
 206   1          lcd_wcmd(0x0f);      //显示开，关光标
 207   1          delay(5);
 208   1          lcd_wcmd(0x01);      //清除LCD的显示内容
 209   1          delay(5);
 210   1      }
 211          /*********************************************************/
 212          /*                                                       */
 213          /* 设定显示位置                                          */
 214          /*                                                       */
 215          /*********************************************************/
 216          void lcd_pos(uchar X,uchar Y)
 217          {                          
 218   1         uchar  pos;
 219   1         if (X==1)
 220   1           {X=0x80;}
 221   1         else if (X==2)
 222   1           {X=0x90;}
 223   1         else if (X==3)
 224   1           {X=0x88;}
 225   1         else if (X==4)
 226   1           {X=0x98;}
 227   1         pos = X+Y ; 
 228   1       
 229   1         lcd_wcmd(pos);     //显示地址
 230   1      }
 231          /*********************************************************
 232          *                                                        *
 233          * 闪烁函数                                               *
 234          *                                                        *
 235          *********************************************************/
 236          void lcdflag() 
 237          {
 238   1         lcd_wcmd(0x08);   
 239   1         delay(400);
 240   1         lcd_wcmd(0x0c);   
 241   1         delay(400);
C51 COMPILER V9.01   12864                                                                 08/05/2014 11:13:18 PAGE 5   

 242   1         lcd_wcmd(0x08);   
 243   1         delay(400);
 244   1         lcd_wcmd(0x0c);   
 245   1         delay(400);
 246   1         lcd_wcmd(0x08);   
 247   1         delay(200); 
 248   1         lcd_wcmd(0x0c);   
 249   1         delay(5);
 250   1         lcd_wcmd(0x01);   
 251   1         delay(5);
 252   1      }
 253          /*********************************************************
 254          *                                                        *
 255          * 图形显示                                               *
 256          *                                                        *
 257          *********************************************************/
 258          void photodisplay(uchar *bmp)   
 259          { 
 260   1        uchar i,j;
 261   1      
 262   1        lcd_wcmd(0x34);        //写数据时,关闭图形显示
 263   1      
 264   1        for(i=0;i<32;i++)
 265   1        {
 266   2          lcd_wcmd(0x80+i);    //先写入水平坐标值
 267   2          lcd_wcmd(0x80);      //写入垂直坐标值
 268   2          for(j=0;j<16;j++)   //再写入两个8位元的数据    
 269   2          lcd_wdat(*bmp++);     
 270   2          delay1(1);
 271   2        }
 272   1      
 273   1        for(i=0;i<32;i++)
 274   1        { 
 275   2          lcd_wcmd(0x80+i);
 276   2          lcd_wcmd(0x88);
 277   2          for(j=0;j<16;j++)         
 278   2              lcd_wdat(*bmp++);    
 279   2              delay1(1);
 280   2        }
 281   1        lcd_wcmd(0x36);       //写完数据,开图形显示 
 282   1      }
 283          /*********************************************************
 284          *                                                        *
 285          * 清屏函数                                               *
 286          *                                                        *
 287          *********************************************************/
 288          void  clr_screen()
 289          {
 290   1         lcd_wcmd(0x34);      //扩充指令操作
 291   1         delay(5);    
 292   1         lcd_wcmd(0x30);      //基本指令操作
 293   1         delay(5); 
 294   1         lcd_wcmd(0x01);      //清屏 
 295   1         delay(5);     
 296   1      }
 297          /**********************************************************
 298          ; 显示字符表代码
 299          **********************************************************/
 300          void  bytecode()
 301          {
 302   1         uchar  s;
 303   1         clr_screen();          //清屏    
C51 COMPILER V9.01   12864                                                                 08/05/2014 11:13:18 PAGE 6   

 304   1         lcd_wcmd(0x80);        //设置显示位置为第一行  
 305   1         for(s=0;s<16;s++)
 306   1         {
 307   2           lcd_wdat(0x30+s); 
 308   2         }
 309   1         lcd_wcmd(0x90);        //设置显示位置为第二行 
 310   1         for(s=0;s<16;s++)
 311   1         {
 312   2           lcd_wdat(0x40+s); 
 313   2         }
 314   1         lcd_wcmd(0x88);        //设置显示位置为第三行  
 315   1         for(s=0;s<16;s++)
 316   1         {
 317   2           lcd_wdat(0x50+s); 
 318   2         }
 319   1         lcd_wcmd(0x98);       //设置显示位置为第四行   
 320   1         for(s=0;s<16;s++)
 321   1         {
 322   2           lcd_wdat(0x60+s); 
 323   2         }
 324   1      }
 325          /*********************************************************
 326          *                                                        *
 327          * 主函数                                                 *
 328          *                                                        *
 329          *********************************************************/
 330          void main()
 331          {
 332   1              unsigned char i;
 333   1              LCD_CS=0;
 334   1              LCD_SCLK=0;
 335   1      
 336   1         
 337   1         delay(100);                 //上电，等待稳定
 338   1         lcd_init();                 //初始化LCD
 339   1      
 340   1      
 341   1      
 342   1         while(1)
 343   1         {
 344   2      
 345   2           lcd_pos(1,0);             //设置显示位置为第一行
 346   2           for(i=0;i<16;i++)
 347   2           {
 348   3             lcd_wdat(DIS1[i]);
 349   3             delay(30);
 350   3           }
 351   2      
 352   2           lcd_pos(2,0);             //设置显示位置为第二行
 353   2           for(i=0;i<16;i++)
 354   2           {
 355   3             lcd_wdat(DIS2[i]);
 356   3             delay(30);
 357   3           }
 358   2           lcd_pos(3,0);             //设置显示位置为第三行
 359   2           for(i=0;i<16;i++)
 360   2           {
 361   3             lcd_wdat(DIS3[i]);
 362   3             delay(30);
 363   3           }
 364   2           lcd_pos(4,0);             //设置显示位置为第四行
 365   2           for(i=0;i<16;i++)
C51 COMPILER V9.01   12864                                                                 08/05/2014 11:13:18 PAGE 7   

 366   2           {
 367   3             lcd_wdat(DIS4[i]);
 368   3             delay(30);
 369   3           }
 370   2      
 371   2      //       while(1);
 372   2           delay(1000);
 373   2           lcdflag();
 374   2      
 375   2           clr_screen();             //清屏
 376   2           photodisplay(Photo2);     //显示图片2
 377   2           delay(2000);
 378   2      
 379   2           clr_screen();  
 380   2         }
 381   1      }
 382          /*********************************************************/
 383          
 384          
 385          
 386          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    741    ----
   CONSTANT SIZE    =   1092    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
