C51 COMPILER V9.52.0.0   ADC                                                               07/26/2015 14:44:00 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE ADC
OBJECT MODULE PLACED IN adc.OBJ
COMPILER INVOKED BY: C:\Program Files\keil\C51\BIN\C51.EXE adc.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "uart.h"
   2          #include "intrins.h"
   3          
   4          
   5          typedef unsigned char BYTE;
   6          typedef unsigned int WORD;
   7          
   8          /*Declare SFR associated with the ADC */
   9          sfr ADC_CONTR   =   0xC5;           //ADC control register
  10          sfr ADC_DATA    =   0xC6;           //ADC high 8-bit result register
  11          sfr ADC_LOW2    =   0xBE;           //ADC low 2-bit result register
  12          sfr P1M0        =   0x91;           //P1 mode control register0
  13          sfr P1M1        =   0x92;           //P1 mode control register1
  14          
  15          /*Define ADC operation const for ADC_CONTR*/
  16          #define ADC_POWER   0x80            //ADC power control bit
  17          #define ADC_FLAG    0x10            //ADC complete flag
  18          #define ADC_START   0x08            //ADC start control bit
  19          #define ADC_SPEEDLL 0x00            //420 clocks
  20          #define ADC_SPEEDL  0x20            //280 clocks
  21          #define ADC_SPEEDH  0x40            //140 clocks
  22          #define ADC_SPEEDHH 0x60            //70 clocks
  23          void InitADC();
  24          float GetADCResult(BYTE ch);
  25          void Delay(WORD n);
  26          void ShowResult(BYTE ch);
  27          void keyscan();
  28          sbit key=P3^7;
  29          unsigned char count=0;
  30          unsigned int sum=0;
  31          void main()
  32          {
  33   1      
  34   1          InitUart(); //IT0=0;EX0=1;                    //Init UART, use to show ADC result
  35   1         InitADC();                      //Init ADC sfr
  36   1          while (1)
  37   1          {
  38   2          keyscan();
  39   2          if(count==1)
  40   2                ShowResult(0);
  41   2      
  42   2          }
  43   1      }
  44          
  45          /*----------------------------
  46          Send ADC result to UART
  47          ----------------------------*/
  48          void ShowResult(BYTE ch)
  49          {
  50   1        float v=0;int a,b,c,d;
  51   1        SendData('$');
  52   1        v=GetADCResult(ch);
  53   1        if(v>269)
  54   1        {
  55   2          sum+=v;
C51 COMPILER V9.52.0.0   ADC                                                               07/26/2015 14:44:00 PAGE 2   

  56   2        }
  57   1        a=sum/1000;
  58   1        SendData('0'+a);
  59   1        b=(sum-a*1000)/100;
  60   1        b=(b>9?9:b);
  61   1        SendData('0'+b);
  62   1        c=(sum-a*1000-b*100)/10;
  63   1        c=(c>9?9:c);
  64   1        SendData('0'+c);
  65   1        d=(sum-a*1000-b*100-c*10);
  66   1        d=(d>9?9:d);
  67   1        SendData('0'+d);
  68   1      /*
  69   1        int a,b,c,d;
  70   1        SendData('$');
  71   1        v=GetADCResult(ch);
  72   1        a=v/100;
  73   1        SendData('0'+a);
  74   1        SendData('.');
  75   1        b=(v-a*100)/10;
  76   1        b=(b>9?9:b);
  77   1        SendData('0'+b);
  78   1        c=(v-a*100-b*10);
  79   1        c=(c>9?9:c);
  80   1        SendData('0'+c);
  81   1        d=(v-a*100-b*10-c)*10;
  82   1        d=(d>9?9:d);
  83   1      //  SendData('0'+d);*/
  84   1        
  85   1        
  86   1        
  87   1        
  88   1        
  89   1        
  90   1        
  91   1        
  92   1      //  SendData('K');
  93   1        Delay(30);
  94   1      //if you want show 10-bit result, uncomment next line
  95   1      //    SendData(ADC_LOW2);             //Show ADC low 2-bit result
  96   1      }
  97          
  98          /*----------------------------
  99          Get ADC result
 100          ----------------------------*/
 101          float GetADCResult(BYTE ch)
 102          {
 103   1        float v;
 104   1          ADC_CONTR = ADC_POWER | ADC_SPEEDLL | ch | ADC_START;
 105   1          _nop_();                        //Must wait before inquiry
 106   1          _nop_();
 107   1          _nop_();
 108   1          _nop_();
 109   1          while (!(ADC_CONTR & ADC_FLAG));//Wait complete flag
 110   1          ADC_CONTR &= ~ADC_FLAG;         //Close ADC
 111   1        v=ADC_DATA*5.0000/2.5600  ;
 112   1          return v;                //Return ADC result
 113   1      }
 114          
 115          /*----------------------------
 116          Initial ADC sfr
 117          ----------------------------*/
C51 COMPILER V9.52.0.0   ADC                                                               07/26/2015 14:44:00 PAGE 3   

 118          void InitADC()
 119          {
 120   1          P1 = P1M0 = P1M1 = 0xff;        //Set all P1 as Open-Drain mode
 121   1          ADC_DATA = 0;                   //Clear previous result
 122   1          ADC_CONTR = ADC_POWER | ADC_SPEEDLL;
 123   1          Delay(2);                       //ADC power-on and delay
 124   1      }
 125          
 126          /*----------------------------
 127          Software delay function
 128          ----------------------------*/
 129          void Delay(WORD n)
 130          {
 131   1          WORD x;
 132   1      
 133   1          while (n--)
 134   1          {
 135   2              x = 5000;
 136   2              while (x--);
 137   2          }
 138   1      }
 139          void keyscan()
 140          {
 141   1           if(key==0)
 142   1         {
 143   2           do{}while(key==0);
 144   2           count++;
 145   2           if(count>1)
 146   2           count=0;
 147   2         }  
 148   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    465    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3      11
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
