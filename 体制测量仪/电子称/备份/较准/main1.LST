C51 COMPILER V9.52.0.0   MAIN1                                                             07/21/2015 15:04:43 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE MAIN1
OBJECT MODULE PLACED IN main1.OBJ
COMPILER INVOKED BY: C:\Program Files\keil\C51\BIN\C51.EXE main1.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include<reg52.h>
   2          #include"main.h"
   3          #include"lcd.h"
   4          void main()
   5          {
   6   1        LCD1602_Init();
   7   1        Get_Maopi(); 
   8   1          while(1)
   9   1         {
  10   2           Get_Weight() ;
  11   2           Show_Weight();
  12   2         }
  13   1       }
  14           void Get_Maopi() 
  15          {  
  16   1      //  HX711_Buffer = ReadCount();  
  17   1        //Weight_Maopi = HX711_Buffer; 
  18   1        for(i=0;i<10;i++)
  19   1        {
  20   2          HX711_Buffer =ReadCount();  
  21   2          HX711_Buffer=HX711_Buffer>>8;
  22   2          //HX711_Buffer = HX711_Buffer/100; 
  23   2          Weight_Maopi +=HX711_Buffer;
  24   2        }
  25   1        Weight_Maopi=Weight_Maopi/10;  
  26   1        //Weight_Shiwu=(unsigned int)((float)Weight_Shiwu*0.05-6);
  27   1      } 
  28           void Get_Weight() 
  29          {
  30   1        /*HX711_Buffer =ReadCount();  
  31   1        Weight_Shiwu = HX711_Buffer/100;
  32   1        Weight_Shiwu = (unsigned int)((float)Weight_Shiwu /4.22+0.05); */
  33   1        for(i=0;i<10;i++)
  34   1        {
  35   2          HX711_Buffer =ReadCount();  
  36   2          HX711_Buffer=HX711_Buffer>>8;
  37   2          //HX711_Buffer = HX711_Buffer/100; 
  38   2          Weight_Shiwu +=HX711_Buffer;
  39   2        }
  40   1        Weight_Shiwu=Weight_Shiwu/10;
  41   1        //Weight_Shiwu=(unsigned int)((float)Weight_Shiwu*0.05-6);
  42   1        //Weight_Shiwu=(long)((float)(Weight_Shiwu-546)*9.9); //??????,???????????????
  43   1        //Weight_Shiwu=(Weight_Shiwu+50)/100*100;
  44   1        Weight_Shiwu=Weight_Shiwu-Weight_Maopi;
  45   1        if(Weight_Shiwu>0x1770)
  46   1          {Weight_Shiwu = (unsigned int)((float)Weight_Shiwu *1.04+0.007); }
  47   1        if(Weight_Shiwu<=0x1770&&Weight_Shiwu>0x03e8)
  48   1        {Weight_Shiwu = (unsigned int)((float)Weight_Shiwu *1.04+0.006); }
  49   1        
  50   1        if(Weight_Shiwu<=0x03e8&&Weight_Shiwu>0x0190)
  51   1          {Weight_Shiwu=(unsigned int)((float)Weight_Shiwu+0x26);}
  52   1          if(Weight_Shiwu<=0x0190&&Weight_Shiwu>0x0064)
  53   1        {Weight_Shiwu=(unsigned int)((float)Weight_Shiwu+3.8);}
  54   1        if(Weight_Shiwu<0x0064&&Weight_Shiwu>0x0002)
  55   1        {Weight_Shiwu=(unsigned int)((float)Weight_Shiwu+0.15);}
C51 COMPILER V9.52.0.0   MAIN1                                                             07/21/2015 15:04:43 PAGE 2   

  56   1        if(Weight_Shiwu<=0x0002)
  57   1        {Weight_Shiwu=0;}
  58   1        k=Weight_Shiwu;
  59   1      }
  60          void Show_Weight()
  61          {
  62   1        //Weight_Shiwu-=MaoPi;
  63   1          LCD1602_WriteInformation((0x80+0x40),0);
  64   1        //ight_Shiwu=Weight_Shiwu<<4;
  65   1         //Weight_Shiwu=(unsigned int)((float)Weight_Shiwu*10+200);
  66   1        //Weight_Shiwu=Weight_Shiwu>>4;
  67   1      //  k=((k+12.61)*0.591/47.9);
  68   1        //k=100*k;
  69   1        //k=k>>8;
  70   1        //LCD1602_DisplayOneCharOnAddr(0,0,(k/100000 + 0x30));  
  71   1        //LCD1602_DisplayOneCharOnAddr(0,1,(k%100000/10000 + 0x30));  
  72   1        //LCD1602_DisplayOneCharOnAddr(0,2,(k/10000 + 0x30));  
  73   1         LCD1602_DisplayOneCharOnAddr(0,0,(k%10000/1000 + 0x30));   
  74   1        // LCD1602_DisplayOneCharOnAddr(0,1,'.');    
  75   1         LCD1602_DisplayOneCharOnAddr(0,1,(k%1000/100 + 0x30));   
  76   1        LCD1602_DisplayOneCharOnAddr(0,2,'.');  
  77   1         LCD1602_DisplayOneCharOnAddr(0,3,(k%100/10 + 0x30));  
  78   1         LCD1602_DisplayOneCharOnAddr(0,4,(k%10 + 0x30));
  79   1      }
*** WARNING C316 IN LINE 79 OF main1.c: unterminated conditionals


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    862    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     26    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
