C51 COMPILER V9.52.0.0   MAIN3                                                             05/30/2015 21:39:57 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE MAIN3
OBJECT MODULE PLACED IN main3.OBJ
COMPILER INVOKED BY: C:\Program Files\keil\C51\BIN\C51.EXE main3.c LARGE BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include<reg51.h>
   2          #include<intrins.h>
   3          #include"main.h"
   4          #include"ds1302.h"
   5          #include"temp.h"
   6          #include"12864.h"
   7          #include"I2C.h"
   8          #include"pcf8591.h"
   9          //#include"74HC165.h"
  10          #define  NOP()   _nop_() 
  11          //--∂®“Â»´æ÷±‰¡ø
  12          
  13          
  14          void main()
  15          {
  16   1        Time0[7]=0x20;
  17   1        TMOD=0x01;
  18   1        EA=1;ET0=1;
  19   1        TL0=0xc3;TH0=0xb7;
  20   1        TR0=0;
  21   1        Relay=0;
  22   1        lcd_init(); 
  23   1      /*  lcd_wcmd(0x80);      lcd_wdat(0x30);
  24   1        lcd_wcmd(0x0d);      //œ‘ æø™£¨πÿπ‚±Í
  25   1          delay12(5);
  26   1        lcd_wcmd(0x90); lcd_wdat(0x30);
  27   1      
  28   1        while(1);*/
  29   1        //readtime();
  30   1      //  ClockPlay();
  31   1        while(1)
  32   1        {
  33   2          
  34   2          switch(keyboardscan(4))
  35   2          {
  36   3            case 0x7e: 
  37   3              {//n=0;
  38   4                n++;
  39   4                if(n==3) n=1;
  40   4                clr_screen();
  41   4                break;
  42   4              }
  43   3            case  0xbe: {n=4;clr_screen();break;}
  44   3          }
  45   2          switch(n)
  46   2          {
  47   3            case 1:{  readtime();Clock(); ClockPlay();break;}
  48   3            case 2:{LcdDisplayTemp0(Ds18b20ReadTemp());ADDisplay();break;}
  49   3            case 4:{timesetting();clr_screen();break;}
  50   3           }
  51   2          
  52   2          //sec(1);// min(1);//hour(1);//day(1);//month(1);//year(1);
  53   2          //P1=hc74_165();
  54   2          //lcd_wcmd(0x80); lcd_wdat(T[3]);
  55   2         // LcdDisplayTemp0(Ds18b20ReadTemp());ADDisplay();
C51 COMPILER V9.52.0.0   MAIN3                                                             05/30/2015 21:39:57 PAGE 2   

  56   2          //
  57   2          //    readtime();
  58   2          //ClockPlay();
  59   2          //
  60   2         }  
  61   1      }
  62          
  63          void LcdDisplayTemp0(int temp)   //lcdœ‘ æ
  64          {
  65   1        unsigned char i; unsigned char T[5];
  66   1          float tp;  
  67   1        if(temp< 0)       //µ±Œ¬∂»÷µŒ™∏∫ ˝
  68   1          {
  69   2          DisplayData[0] = 0x40; 
  70   2          //“ÚŒ™∂¡»°µƒŒ¬∂» « µº Œ¬∂»µƒ≤π¬Î£¨À˘“‘ºı1£¨‘Ÿ»°∑¥«Û≥ˆ‘≠¬Î
  71   2          temp=temp-1;
  72   2          temp=~temp;
  73   2          tp=temp;
  74   2          temp=tp*0.0625*100+0.5; 
  75   2          //¡Ù¡Ω∏ˆ–° ˝µ„æÕ*100£¨+0.5 «Àƒ…·ŒÂ»Î£¨“ÚŒ™C”Ô—‘∏°µ„ ˝◊™ªªŒ™’˚–Õµƒ ±∫Ú∞—–° ˝µ„
  76   2          //∫Û√Êµƒ ˝◊‘∂Ø»•µÙ£¨≤ªπ‹ «∑Ò¥Û”⁄0.5£¨∂¯+0.5÷Æ∫Û¥Û”⁄0.5µƒæÕ «Ω¯1¡À£¨–°”⁄0.5µƒæÕ
  77   2          //À„”…œ0.5£¨ªπ «‘⁄–° ˝µ„∫Û√Ê°£
  78   2       
  79   2          }
  80   1        else
  81   1          {     
  82   2          DisplayData[0] = 0x00;
  83   2          tp=temp;//“ÚŒ™ ˝æ›¥¶¿Ì”––° ˝µ„À˘“‘Ω´Œ¬∂»∏≥∏¯“ª∏ˆ∏°µ„–Õ±‰¡ø
  84   2          //»Áπ˚Œ¬∂» «’˝µƒƒ«√¥£¨ƒ«√¥’˝ ˝µƒ‘≠¬ÎæÕ «≤π¬ÎÀ¸±æ…Ì
  85   2          temp=tp*0.0625*100+0.5; 
  86   2          //¡Ù¡Ω∏ˆ–° ˝µ„æÕ*100£¨+0.5 «Àƒ…·ŒÂ»Î£¨“ÚŒ™C”Ô—‘∏°µ„ ˝◊™ªªŒ™’˚–Õµƒ ±∫Ú∞—–° ˝µ„
  87   2          //∫Û√Êµƒ ˝◊‘∂Ø»•µÙ£¨≤ªπ‹ «∑Ò¥Û”⁄0.5£¨∂¯+0.5÷Æ∫Û¥Û”⁄0.5µƒæÕ «Ω¯1¡À£¨–°”⁄0.5µƒæÕ
  88   2          //À„º”…œ0.5£¨ªπ «‘⁄–° ˝µ„∫Û√Ê°£
  89   2        }
  90   1        //P3=tp;
  91   1      
  92   1        Data0[0] = temp / 10000;
  93   1        Data0[1] = temp % 10000 / 1000;
  94   1        Data0[2] = temp % 1000 / 100 ;
  95   1        Data0[3] = temp % 100 / 10;
  96   1        Data0[4] = temp % 10;
  97   1        
  98   1        for(i=0;i<=4;i++)
  99   1        {
 100   2          switch(Data0[i])
 101   2          {
 102   3            case 0:
 103   3            {T[i]=0x30;break;}
 104   3            case 1:
 105   3            {T[i]=0x31;break;}
 106   3            case 2:
 107   3            {T[i]=0x32;break;}
 108   3            case 3:
 109   3            {T[i]=0x33;break;}
 110   3            case 4:
 111   3            {T[i]=0x34;break;}
 112   3            case 5:
 113   3            { T[i]=0x35;break;}
 114   3            case 6:
 115   3            { T[i]=0x36;break;}
 116   3            case 7:
 117   3            {T[i]=0x37;break;}
C51 COMPILER V9.52.0.0   MAIN3                                                             05/30/2015 21:39:57 PAGE 3   

 118   3            case 8:
 119   3            {T[i]=0x38;break;}
 120   3            case 9:
 121   3            {T[i]=0x39;break;}      
 122   3          }
 123   2        }
 124   1             lcd_pos(1,0);             //??????????
 125   1           for(i=0;i<5;i++)
 126   1           {
 127   2             lcd_wdat(DIS3[i]);
 128   2           }
 129   1           lcd_wcmd(0x93);
 130   1           lcd_wdat(T[0]);
 131   1        lcd_wdat(T[1]);
 132   1        lcd_wdat(T[2]);
 133   1        lcd_wdat(0x2e);
 134   1        lcd_wdat(T[3]);
 135   1        lcd_wdat(T[4]);//lcd_pos(3,0);
 136   1        lcd_wdat(0xa1);
 137   1        lcd_wdat(0xe3);
 138   1        lcd_wdat(0x63);
 139   1        /* for(i=1;i<5;i++)
 140   1           {
 141   1             lcd_wdat(T[i]);
 142   1             delay0(3);
 143   1           }
 144   1            lcd_wdat(0x65);
 145   1      */
 146   1      }
 147          void delay_main(int ms)
 148          {
 149   1          while(ms--)
 150   1        {
 151   2            uchar i;
 152   2          for(i=0;i<150;i++)  
 153   2           {
 154   3            _nop_();         
 155   3          _nop_();
 156   3          _nop_();
 157   3          _nop_();
 158   3           }
 159   2        }
 160   1      } 
 161          
 162          void readtime()
 163          {
 164   1           Time0[0]= (DS1302_ReadOneByteAtAddr(ADDR_SEC_R));
 165   1           Time0[1]= (DS1302_ReadOneByteAtAddr(ADDR_MIN_R));
 166   1           Time0[2]= (DS1302_ReadOneByteAtAddr(ADDR_HOUR_R));
 167   1           Time0[3]= (DS1302_ReadOneByteAtAddr(ADDR_DAY_R));
 168   1           Time0[4]= (DS1302_ReadOneByteAtAddr(ADDR_MONTH_R));
 169   1           Time0[5]= (DS1302_ReadOneByteAtAddr(ADDR_WEEK_R));
 170   1           Time0[6]= (DS1302_ReadOneByteAtAddr(ADDR_YEAR_R));
 171   1      }
 172          void ClockPlay()
 173          {   uchar i;
 174   1        
 175   1            if((Time0[7]&0x0a)==0x0a)    
 176   1            {   
 177   2                Time0[7]=(Time0[7]&0xf0);
 178   2                Time0[7]+=0x10;
 179   2            }
C51 COMPILER V9.52.0.0   MAIN3                                                             05/30/2015 21:39:57 PAGE 4   

 180   1            if((Time0[7]&0x0f)==0x0f)
 181   1            {   
 182   2                Time0[7]=(Time0[7]&0xf0);
 183   2                Time0[7]+=0x09;
 184   2            }
 185   1      
 186   1           lcd_pos(1,0);             //…Ë÷√œ‘ æŒª÷√Œ™µ⁄“ª––
 187   1           for(i=0;i<5;i++)
 188   1           {
 189   2             lcd_wdat(DIS1[i]);
 190   2             delay_main(5);
 191   2           }
 192   1           lcd_wcmd(0x91); 
 193   1           lcd_wdat(0x30+Time0[7]/16);
 194   1           lcd_wdat(0x30+Time0[7]%16);
 195   1           lcd_wdat(0x30+Time0[6]/16);
 196   1           lcd_wdat(0x30+Time0[6]%16);
 197   1           lcd_wdat(0xc4);
 198   1           lcd_wdat(0xea);
 199   1           lcd_wdat(0x30+Time0[4]/16);
 200   1           lcd_wdat(0x30+Time0[4]%16);
 201   1           lcd_wdat(0xd4);
 202   1           lcd_wdat(0xc2);
 203   1           lcd_wdat(0x30+Time0[3]/16);
 204   1           lcd_wdat(0x30+Time0[3]%16);
 205   1           lcd_wdat(0xc8);
 206   1           lcd_wdat(0xd5);
 207   1           lcd_pos(3,0);           
 208   1           for(i=0;i<5;i++)
 209   1           {
 210   2             lcd_wdat(DIS2[i]);
 211   2             delay_main(5);
 212   2           }
 213   1           //lcd_pos(4,0); 
 214   1           lcd_wcmd(0x9B); 
 215   1           lcd_wdat(0x30+Time0[2]/16);
 216   1           lcd_wdat(0x30+Time0[2]%16);
 217   1      
 218   1           lcd_wdat(':');
 219   1               lcd_wcmd(0x9D); 
 220   1           lcd_wdat(0x30+Time0[1]/16);
 221   1           lcd_wdat(0x30+Time0[1]%16);
 222   1           lcd_wdat(':');
 223   1               lcd_wcmd(0x9F); 
 224   1           lcd_wdat(0x30+Time0[0]/16);
 225   1           lcd_wdat(0x30+Time0[0]%16);
 226   1      }
 227          void ADDisplay()
 228          {int i;
 229   1        ISendByte(PCF8591,0x41);
 230   1        D[0]=IRcvByte(PCF8591)*2;  //ADC0 ƒ£ ˝◊™ªª1  ∑≈¥Û2±∂œ‘ æ
 231   1        LedOut[0]=Disp_Tab[D[0]%10000/1000];
 232   1           LedOut[1]=Disp_Tab[D[0]%1000/100];
 233   1           LedOut[2]=Disp_Tab[D[0]%100/10];
 234   1           LedOut[3]=Disp_Tab[D[0]%10];
 235   1            lcd_pos(3,0);             //…Ë÷√œ‘ æŒª÷√Œ™µ⁄“ª––
 236   1           for(i=0;i<5;i++)
 237   1           {
 238   2             lcd_wdat(DIS4[i]);
 239   2             delay_main(5);
 240   2           }
 241   1           lcd_wcmd(0x9C); 
C51 COMPILER V9.52.0.0   MAIN3                                                             05/30/2015 21:39:57 PAGE 5   

 242   1          //lcd_wdat(LedOut[0]);
 243   1           lcd_wdat(LedOut[1]);
 244   1          //     lcd_wdat(DIS6[0]);
 245   1           //lcd_wdat(DIS6[1]);
 246   1                lcd_wdat(0x2e);//.
 247   1           lcd_wdat(LedOut[2]);
 248   1      
 249   1           lcd_wdat(LedOut[3]);
 250   1           lcd_wdat(0x56);//V
 251   1      
 252   1      }
 253          void delay0(unsigned int n)
 254          {
 255   1        unsigned int k;
 256   1        for(k=2;k>0;k--)
 257   1        {
 258   2          while(n--){NOP();}
 259   2        }
 260   1      }
 261          
 262          void delay10(unsigned int n)
 263          {
 264   1          while(n--);
 265   1      }
 266          void timesetting()
 267          {
 268   1        while(1)
 269   1        {
 270   2          ClockPlay();
 271   2          lcd_wcmd(0x84); 
 272   2          for(a=0;a<7;a++)
 273   2           {lcd_wdat(DIS5[a]);}
 274   2        switch(keyboardscan(4))
 275   2        {
 276   3            case 0x77:     //∞¥œ¬∞¥º¸1£¨Ω¯»Îµ˜ ‘ƒÍ
 277   3            {
 278   4               while (1)
 279   4               {
 280   5                 lcd_wcmd(0x92); lcd_wcmd(0x0d);  
 281   5                  switch(keyboardscan(8))
 282   5                  {
 283   6                    case 0x7d://∞¥œ¬K9£¨Ω¯»Îº”1
 284   6                     { year(0);break;}
 285   6                    case 0xbd:
 286   6                      {year(1);break;}
 287   6                  }
 288   5                 if(keyboardscan(4)==0xed)
 289   5                 {lcd_wcmd(0x0c);break;}
 290   5               }break;
 291   4            }
 292   3            case 0xb7://∞¥œ¬K2 Ω¯»Îµ˜ ‘‘¬
 293   3            {
 294   4                while (1)
 295   4                {lcd_wcmd(0x94); lcd_wcmd(0x0d);  
 296   5                  switch(keyboardscan(8))
 297   5                  {
 298   6                    case 0x7d://∞¥œ¬K9£¨Ω¯»Îº”1
 299   6                        {   month(0);break; }
 300   6                    case 0xbd:
 301   6                       {month(1);break;}
 302   6                  }
 303   5                 if(keyboardscan(4)==0xed)
C51 COMPILER V9.52.0.0   MAIN3                                                             05/30/2015 21:39:57 PAGE 6   

 304   5                 {lcd_wcmd(0x0c);break;}
 305   5               }break;
 306   4            }
 307   3            case 0xd7://∞¥œ¬K3 Ω¯»Îµ˜ ‘day
 308   3            {
 309   4                while (1)
 310   4                {lcd_wcmd(0x96); lcd_wcmd(0x0d);  
 311   5                  switch(keyboardscan(8))
 312   5                  {
 313   6                     case 0x7d://∞¥œ¬K9£¨Ω¯»Îº”1
 314   6                        {  day(0);break;  }
 315   6                     case 0xbd://K13
 316   6                        {day(1);break;}
 317   6                  }
 318   5                 if(keyboardscan(4)==0xed)
 319   5                 {lcd_wcmd(0x0c);break;}
 320   5               }break;
 321   4            }
 322   3            case 0xe7://∞¥œ¬K4 Ω¯»Îµ˜ ‘hour
 323   3            {
 324   4                while (1)
 325   4                {lcd_wcmd(0x9B); lcd_wcmd(0x0d);  
 326   5                  switch(keyboardscan(8))
 327   5                  {
 328   6                      case 0x7d://∞¥œ¬K9£¨Ω¯»Îº”1
 329   6                          {  hour(0);break;}
 330   6                      case 0xbd:
 331   6                         {hour(1);break;}
 332   6                  }
 333   5                 if(keyboardscan(4)==0xed)
 334   5                 {lcd_wcmd(0x0c);break;}
 335   5               }break;
 336   4            }
 337   3            case 0x7b://∞¥œ¬K5 Ω¯»Îµ˜ ‘min
 338   3            {
 339   4              while(1)
 340   4                {lcd_wcmd(0x9D); lcd_wcmd(0x0d);  
 341   5                  switch(keyboardscan(8))
 342   5                  {
 343   6                      case 0x7d://∞¥œ¬K9£¨Ω¯»Îº”1
 344   6                         {  min(0);break; }
 345   6                      case 0xbd:
 346   6                         {min(1);break;}
 347   6                  }
 348   5                 if(keyboardscan(4)==0xed)
 349   5                 {lcd_wcmd(0x0c);break;}
 350   5               }break;
 351   4            }
 352   3            case 0xbb://∞¥œ¬K6 Ω¯»Îµ˜sec
 353   3            {
 354   4                while (1)
 355   4                {
 356   5                  lcd_wcmd(0x9F); lcd_wcmd(0x0d);  
 357   5                  switch(keyboardscan(8))
 358   5                  {
 359   6                       case 0x7d://∞¥œ¬K9£¨Ω¯»Îº”1
 360   6                         { sec(0);break;  }
 361   6                       case 0xbd:
 362   6                         {sec(1);break;}
 363   6                  }
 364   5                 if(keyboardscan(4)==0xed)
 365   5                 {lcd_wcmd(0x0c);break;}
C51 COMPILER V9.52.0.0   MAIN3                                                             05/30/2015 21:39:57 PAGE 7   

 366   5               }break;
 367   4            }
 368   3         }
 369   2          if(keyboardscan(4)==0xee)
 370   2          {
 371   3              n=1; lcd_wcmd(0x0c);
 372   3              DS1302_WriteOneByteAtAddr(0x8e,0x00);               
 373   3              DS1302_SetInit(Time0);                 //∂‘ ±÷”Ω¯––…Ë÷√
 374   3              DS1302_WriteOneByteAtAddr(0x8e,0x80);
 375   3              break;
 376   3          }  //lcd_wcmd(0x0c);
 377   2       }
 378   1      }
 379          void year(unsigned char k)
 380          {
 381   1        if(k==0)                //º”“ª
 382   1        { 
 383   2          Time0[6]+=0x01;
 384   2          if(Time0[6]==0x9a)
 385   2          {
 386   3              Time0[6]=0x00;
 387   3              Time0[7]+=0x01;
 388   3              if((Time0[7]&0x0a)==0x0a)
 389   3              {   
 390   4                  Time0[7]=(Time0[7]&0xf0);
 391   4                  Time0[7]+=0x10;
 392   4              }
 393   3          }
 394   2          if((Time0[6]&0x0a)==0x0a)
 395   2          {   
 396   3              Time0[6]=(Time0[6]&0xf0);
 397   3              Time0[6]+=0x10;
 398   3           }  
 399   2        }
 400   1        if(k==1)                 //ºı“ª
 401   1        {
 402   2           Time0[6]-=0x01;
 403   2           if((Time0[6]&0x0f)==0x0f)
 404   2            {   
 405   3                Time0[6]=(Time0[6]&0xf0);
 406   3                Time0[6]+=0x09;
 407   3            }
 408   2            if(Time0[6]==0x00)
 409   2            {   
 410   3                Time0[6]=0x99;
 411   3                Time0[7]-=0x01;
 412   3                if((Time0[7]&0x0f)==0x0f)
 413   3                {   
 414   4                     Time0[7]=(Time0[7]&0xf0);
 415   4                     Time0[7]+=0x09;
 416   4                }
 417   3            } 
 418   2        }
 419   1        lcd_wcmd(0x0d);      //œ‘ æø™£¨πÿπ‚±Í
 420   1        ClockPlay();
 421   1      }
 422          
 423          void month(unsigned char k)
 424          {
 425   1        if(k==0)
 426   1        {
 427   2          Time0[4]+=0x01;
C51 COMPILER V9.52.0.0   MAIN3                                                             05/30/2015 21:39:57 PAGE 8   

 428   2          if(Time0[4]==0x13)
 429   2          {
 430   3              Time0[4]=0x01;
 431   3          }
 432   2          if((Time0[4]&0x0a)==0x0a)
 433   2          {   
 434   3            Time0[4]=(Time0[4]&0xf0);
 435   3            Time0[4]+=0x10;
 436   3          }
 437   2         }
 438   1        if(k==1)
 439   1        {
 440   2          Time0[4]-=0x01;
 441   2          if(Time0[4]==0x00)
 442   2          {   
 443   3              Time0[4]=0x12;
 444   3          } 
 445   2         if((Time0[4]&0x0f)==0x0f)
 446   2          {   
 447   3              Time0[4]=(Time0[4]&0xf0);
 448   3              Time0[4]+=0x09;
 449   3          }
 450   2        }
 451   1        ClockPlay();
 452   1      }
 453          
 454          void day(unsigned char k)
 455          {
 456   1         if(k==0)
 457   1         {        
 458   2           if(Time0[3]==checkday())
 459   2           {    
 460   3              Time0[3]=0x00;
 461   3           }  
 462   2          Time0[3]+=0x01;
 463   2          if((Time0[3]&0x0a)==0x0a)
 464   2          {   
 465   3              Time0[3]=(Time0[3]&0xf0);
 466   3              Time0[3]+=0x10;
 467   3          }
 468   2        }
 469   1        if(k==1)
 470   1        {
 471   2           if(Time0[3]==0x01)
 472   2            {   
 473   3                Time0[3]=checkday()+0x01;
 474   3            } 
 475   2            Time0[3]-=0x01;
 476   2            if((Time0[3]&0x0f)==0x0f)
 477   2            {   
 478   3                Time0[3]=(Time0[3]&0xf0);
 479   3                Time0[3]+=0x09;
 480   3            }
 481   2        }
 482   1        ClockPlay();
 483   1      }
 484          void hour(unsigned char k)
 485          {
 486   1         if(k==0)
 487   1         {
 488   2           Time0[2]+=0x01;
 489   2           if(Time0[2]==0x24)
C51 COMPILER V9.52.0.0   MAIN3                                                             05/30/2015 21:39:57 PAGE 9   

 490   2           {
 491   3              Time0[2]=0x00;
 492   3           }
 493   2          if((Time0[2]&0x0a)==0x0a)
 494   2          {   
 495   3              Time0[2]=(Time0[2]&0xf0);
 496   3              Time0[2]+=0x10;
 497   3           }
 498   2         }
 499   1         if(k==1) 
 500   1          {
 501   2            if(Time0[2]==0x00)
 502   2            {   
 503   3                Time0[2]=0x24;
 504   3            } 
 505   2            Time0[2]-=0x01;
 506   2            if((Time0[2]&0x0f)==0x0f)
 507   2            {   
 508   3                Time0[2]=(Time0[2]&0xf0);
 509   3                Time0[2]+=0x09;
 510   3            } 
 511   2          }
 512   1        ClockPlay();    
 513   1      }
 514          
 515          void min(unsigned char k)
 516          {
 517   1        if(k==0)
 518   1        {
 519   2          Time0[1]+=0x01;
 520   2          if((Time0[1]&0x0a)==0x0a)
 521   2          {   
 522   3             Time0[1]=(Time0[1]&0xf0);
 523   3             Time0[1]+=0x10;
 524   3          }
 525   2          if(Time0[1]==0x60)
 526   2          {
 527   3              Time0[1]=0x00;
 528   3          }
 529   2        }
 530   1        if(k==1)
 531   1        {
 532   2          if(Time0[1]==0x00)
 533   2          {   
 534   3              Time0[1]=0x60;
 535   3          }
 536   2          Time0[1]-=0x01;
 537   2          if((Time0[1]&0x0f)==0x0f)
 538   2          {   
 539   3              Time0[1]=(Time0[1]&0xf0);
 540   3              Time0[1]+=0x09;
 541   3          } 
 542   2        }
 543   1        ClockPlay();
 544   1      }
 545          void sec(unsigned char k)
 546          {
 547   1        if(k==0)
 548   1        {
 549   2          Time0[0]+=0x01;
 550   2          if((Time0[0]&0x0a)==0x0a)
 551   2          {   
C51 COMPILER V9.52.0.0   MAIN3                                                             05/30/2015 21:39:57 PAGE 10  

 552   3             Time0[0]=(Time0[0]&0xf0);
 553   3            Time0[0]+=0x10;
 554   3          }
 555   2          if(Time0[0]==0x60)
 556   2          {
 557   3                Time0[0]=0x00;
 558   3          }
 559   2        }
 560   1        if(k==1)
 561   1        {
 562   2          if(Time0[0]==0x00)
 563   2          {   
 564   3              Time0[0]=0x60;
 565   3          } 
 566   2          Time0[0]-=0x01;
 567   2          if((Time0[0]&0x0f)==0x0f)
 568   2          {   
 569   3                Time0[0]=(Time0[0]&0xf0);
 570   3                Time0[0]+=0x09;
 571   3          } 
 572   2        }
 573   1        ClockPlay();
 574   1      }
 575          
 576          void relaywork(unsigned char k)
 577          {
 578   1        switch(k)
 579   1        {
 580   2           case 0:
 581   2           {  Relay=1;break;}
 582   2           case 1:
 583   2           {  Relay=0;break;}
 584   2         }
 585   1      }
 586          
 587          void Clock()
 588          {
 589   1          if(Time0[1]==clock1[0])
 590   1            {
 591   2                if(Time0[2]==clock1[1])
 592   2                {
 593   3                    if(Time0[0]==0x00)
 594   3                    {relaywork(0);TR0=1;clock_num=0;}
 595   3                }
 596   2            }
 597   1            if (Time0[1]==clock2[0])
 598   1            {
 599   2                if(Time0[2]==clock2[1])
 600   2                {
 601   3                    if(Time0[0]==0x00)
 602   3                    {relaywork(0);TR0=1;clock_num=0;}
 603   3                }
 604   2            }
 605   1            if (Time0[1]==clock3[0])
 606   1            {
 607   2                if(Time0[2]==clock3[1])
 608   2                {
 609   3                    if(Time0[0]==0x00)
 610   3                    {relaywork(0);TR0=1;clock_num=0;}
 611   3                }
 612   2            }
 613   1            if (Time0[1]==clock4[0])
C51 COMPILER V9.52.0.0   MAIN3                                                             05/30/2015 21:39:57 PAGE 11  

 614   1            {
 615   2                if(Time0[2]==clock4[1])
 616   2                {
 617   3                    if(Time0[0]==0x00)
 618   3                    {relaywork(0);TR0=1;clock_num=0;}
 619   3                }
 620   2            }
 621   1            if (Time0[1]==clock5[0])
 622   1            {
 623   2                if(Time0[2]==clock5[1])
 624   2                {
 625   3                    if(Time0[0]==0x00)
 626   3                    {relaywork(0);TR0=1;clock_num=0;}
 627   3                }
 628   2            }
 629   1            if (Time0[1]==clock6[0])
 630   1            {
 631   2                if(Time0[2]==clock6[1])
 632   2                {
 633   3                    if(Time0[0]==0x00)
 634   3                    {relaywork(0);TR0=1;clock_num=0;}
 635   3                }
 636   2            }
 637   1            if (Time0[1]==clock7[0])
 638   1            {
 639   2                if(Time0[2]==clock7[1])
 640   2                {
 641   3                    if(Time0[0]==0x00)
 642   3                    {relaywork(0);TR0=1;clock_num=0;}
 643   3                }
 644   2            }
 645   1            if (Time0[1]==clock8[0])
 646   1            {
 647   2                if(Time0[2]==clock8[1])
 648   2                {
 649   3                    if(Time0[0]==0x00)
 650   3                    {relaywork(0);TR0=1;clock_num=0;}
 651   3                }
 652   2            }
 653   1      }
 654          
 655          void time_interrupt()   interrupt 1
 656          {
 657   1        clock_num++;
 658   1        TL0=0xc3;TH0=0xb7;
 659   1        if(clock_num==1000)
 660   1        {
 661   2          relaywork(1);
 662   2        }
 663   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   3522    ----
   CONSTANT SIZE    =     41    ----
   XDATA SIZE       =    142      25
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
